[{"/Users/tomassantos/Documents/Mestrado/Text Mining/hotel-reviews/src/index.tsx":"1","/Users/tomassantos/Documents/Mestrado/Text Mining/hotel-reviews/src/reportWebVitals.ts":"2","/Users/tomassantos/Documents/Mestrado/Text Mining/hotel-reviews/src/App.tsx":"3","/Users/tomassantos/Documents/Mestrado/Text Mining/hotel-reviews/src/components/Select/index.tsx":"4","/Users/tomassantos/Documents/Mestrado/Text Mining/hotel-reviews/src/components/Table/index.tsx":"5"},{"size":500,"mtime":1648160893188,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1648160893188,"results":"8","hashOfConfig":"7"},{"size":272,"mtime":1648161613374,"results":"9","hashOfConfig":"7"},{"size":966,"mtime":1648161647504,"results":"10","hashOfConfig":"7"},{"size":4945,"mtime":1648161914855,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dlzsmr",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/tomassantos/Documents/Mestrado/Text Mining/hotel-reviews/src/index.tsx",[],[],"/Users/tomassantos/Documents/Mestrado/Text Mining/hotel-reviews/src/reportWebVitals.ts",[],[],"/Users/tomassantos/Documents/Mestrado/Text Mining/hotel-reviews/src/App.tsx",["29"],[],"/Users/tomassantos/Documents/Mestrado/Text Mining/hotel-reviews/src/components/Select/index.tsx",[],[],["30","31"],"/Users/tomassantos/Documents/Mestrado/Text Mining/hotel-reviews/src/components/Table/index.tsx",["32"],[],"import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface Column {\n  id: \"id\" | \"description\" | \"browser\" | \"device\" | \"label\";\n  label: string;\n  minWidth?: number;\n  align?: \"right\";\n  format?: (value: number) => string;\n}\n\nconst columns: readonly Column[] = [\n  { id: \"id\", label: \"ID\", minWidth: 170 },\n  { id: \"description\", label: \"Description\", minWidth: 100 },\n  {\n    id: \"browser\",\n    label: \"Browser\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value: number) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"device\",\n    label: \"Device\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value: number) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"label\",\n    label: \"Label\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value: number) => value.toFixed(2),\n  },\n];\n\ninterface Data {\n  id: number;\n  description: string;\n  browser: string;\n  device: string;\n  label: string;\n}\n\nfunction createData(\n  id: number,\n  description: string,\n  browser: string,\n  device: string,\n  label: string\n): Data {\n  return { id, description, browser, device, label };\n}\n\nconst rows = [\n  {\n    id: 10329,\n    description:\n      \"Stayed here with husband and sons on the way to an Alaska Cruise. We all loved the hotel, great experience. Ask for a room on the North tower, facing north west for the best views. We had a high floor, with a stunning view of the needle, the city, and even the cruise ships! We ordered room service for dinner so we could enjoy the perfect views. Room service dinners were delicious, too! You are in a perfect spot to walk everywhere, so enjoy the city. Almost forgot- Heavenly beds were heavenly, too!\",\n    browser: \"InternetExplorer\",\n    device: \"Desktop\",\n    label: \"happy\",\n  },\n  {\n    id: 10331,\n    description:\n      \"We had - rooms. One was very nice and clearly had been updated more recently than the other. The other was clean and the bed was comfy but it needed some updating (carpet was old and wrinkled for example). Great location for visiting Inner Harbor, getting to Fells Point, Orioles games etc. SuperShuttle from BWI worked great both ways. TV remotes in both rooms were terrible but we didn't watch much TV so not a big deal. Wireless was sketchy on --th and --th floors but again, didn't need it much - we were on vacation so it didn't really matter. Breakfast was good each morning. Would stay again if in town.\",\n    browser: \"InternetExplorer\",\n    device: \"Desktop\",\n    label: \"happy\",\n  },\n];\n\nexport default function StickyHeadTable() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                    {columns.map((column: Column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n",{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":12},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"33","severity":1,"message":"41","line":53,"column":10,"nodeType":"35","messageId":"36","endLine":53,"endColumn":20},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["42"],"no-negated-in-lhs",["43"],"'createData' is defined but never used.","no-global-assign","no-unsafe-negation"]